.pseudo{  /* Pseudo Class are used to define special state to HTML elemets */
    height: 25px;
    width: 150px;
    background-color: greenyellow;
    border: 3px solid black;
    border-radius: 10px;
}

.pseudo:hover{  /* Properties is displayed when cursor moves on it */
    height: 30px;
    width: 160px;
    background-color: burlywood;
}

.pseudo:active{  /* Properties is displayed when we have clicked it */
    background-color: violet;
}

#transition_1{  /* CSS Transition enables smooth animation between changes */ 
    transition-property: all;  /* It shows on which CSS Properties transition would apply */
    transition-duration: 0.5s;  /* Used to set total time in transition */
    transition-timing-function: ease-in-out;  /* Slow in start and ending and fast in middle */
    transition-delay: 0.1s;  /* Specify Delay time before starting transition */
    /* transition-timing-function: controls the speed curve of the transition */
}

#transition_2{
    /*transition-property: all;
    transition-duration: 0.5s;
    transition-timing-function: steps(2);   It will do everything in specified steps 
    transition-delay: 0.1s;*/

    transition: all 0.5s steps(2) 0.1s;/*Shorthand transition : property duration time-function delay */
}

h3{
    text-align: center;
}

.transform{  /* Transform is used to modify element shape and position */
    height: 50px;
    width: 70px;
    padding: 10px;
    margin: 20px;
    border: 3px solid black;
    border-radius: 5px;

    transition: all 2s ease-in;
}

#rotate_1{
    background-color: lime;
    display: inline-block;
}

#rotate_1:hover{
    transform: rotate(45deg);  /* It is used to rotate the box on z-axis */
}

#rotate_2{
    background-color: blueviolet;
    display: inline-block;
}

#rotate_2:hover{
    transform: rotate(180deg);
}

#rotate_3{
    background-color: indianred;
    display: inline-block;
}

#rotate_3:hover{
    transform: rotatex(90deg);  /* It is used to rotate the box on x-axis */
}

#rotate_4{
    background-color: violet;
    display: inline-block;
}

#rotate_4:hover{
    transform: rotatey(90deg);  /* It is used to rotate the box on y-axis */
}

#scale_1{
    background-color: lime;
    display: inline-block;
}

#scale_1:hover{
    transform: scale(2);  /* It is used to make the box bigger on z-axis */
}

#scale_2{
    background-color: blueviolet;
    display: inline-block;
}

#scale_2:hover{
    transform: scale(4);
}

#scale_3{
    background-color: indianred;
    display: inline-block;
}

#scale_3:hover{
    transform: scalex(2);  /* It is used to make the box bigger on x-axis */
}

#scale_4{
    background-color: violet;
    display: inline-block;
}

#scale_4:hover{
    transform: scaley(2);  /* It is used to make the box bigger on y-axis */
}

#translate_1{
    background-color: lime;
    display: inline-block;
}

#translate_1:hover{
    transform: translate(50px);  /* It will shift the box on x-axis */
}

#translate_2{
    background-color: blueviolet;
    display: inline-block;
}

#translate_2:hover{
    transform: translate(50px,50px);  /* It will shift the box on x-ais and y-axis */
}

#translate_3{
    background-color: indianred;
    display: inline-block;
}

#translate_3:hover{
    transform: translatex(50px);  /* It will shift the box on x-axis */
}

#translate_4{
    background-color: violet;
    display: inline-block;
}

#translate_4:hover{
    transform: translatey(50px);  /* It will shift the box on y-axis */
}

#skew_1{
    background-color: lime;
    display: inline-block;
}

#skew_1:hover{
    transform: skew(45deg);  /* It will skew the box on x-axis */
}

#skew_2{
    background-color: blueviolet;
    display: inline-block;
}

#skew_2:hover{
    transform: skew(90deg);  /* It will skew the box on x-ais */
}

#skew_3{
    background-color: indianred;
    display: inline-block;
}

#skew_3:hover{
    transform: skewx(45deg);  /* It will skew the box on x-axis */
}

#skew_4{
    background-color: violet;
    display: inline-block;
}

#skew_4:hover{
    transform: skewy(45deg);  /* It will skew the box on y-axis */
}

.animate{
    height: 70px;
    width: 70px;
    border: 3px solid black;
    border-radius: 5px;
    background-color: plum;
    margin: 20px;
    display: inline-block;
}

/* Animation Syntax : To defined the animation */
@keyframes gumakad {  /* @keyframe animation name */
    from{
        left: 100px;
    }
    to{
        left: 700px;
    }
}

#animate_1{
    position: relative;  /* It is imortant in animation */
    animation-name: gumakad;  /* Specifies the name of animation */
    animation-duration: 2s;  /* Specifies the duration of animation */
    animation-timing-function: ease-in-out;  /* It control the speed curve of animation */
    animation-delay: 1s;  /* Specifies the delay in animation */
    animation-iteration-count: 3;  /* Specify number of times animation repeat */
    animation-direction: reverse;  /* Specify the direction of animation */ 

    /* animation: name duration timing-function delay iteration-count direction fill-mode;  Shorthand */
}

@keyframes timmer {  
    0% {
        left: 10px;
        top: 0px;
    }
    50% {
        left: 150px;
        top: 100px;            /* It is used to specify time spams to animation */
    }
    100% {
        left: 300px;
        top: 0px;
    }
}

#animate_2{
    position: relative;
    animation: timmer 2s ease-in-out 1s 2 alternate ;
    /* alternate follow the same path as they has followed in first */
}